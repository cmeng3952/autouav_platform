<launch>

    <arg name="swarm_num" default="3"/>
    <arg name="autoload" default="false"/>
    <arg name="uav_control_start" default="gnome-terminal -- roslaunch UAVcontrol uav_control_main_indoor.launch"/>
    <arg name="close_uav_control" default="gnome-terminal -- rosnode kill `rosnode list | grep -v /communication_bridge | grep -v /rosout`"/>
    <arg name="swarm_control_start" default="'/home/amov/Prometheus/Modules/swarm_control/sh/simulation/sitl_swarm_3uav.sh'"/>
    <arg name="close_swarm_control" default=""/>

    <arg name="ground_station_ip" default="127.0.0.1"/>

    <arg name="uav_id" default="1"/>
    <arg name="is_simulation" default="1"/>
    <arg name="swarm_data_update_timeout" default="5"/>

    <!-- 控制一些数据的转发给地面站或其他机器的频率 -->
    <!-- 无人机状态和无人机控制状态发送频率，设置为0则以订阅频率发送，不能超过订阅频率 -->
    <arg name="uav_basic_hz" default="10"/>
    <!-- 无人车状态发送频率，设置为0则以订阅频率发送 -->
    <arg name="ugv_basic_hz" default="10"/>
    <!-- 吊舱状态发送频率，设置为0则以订阅频率发送 -->
    <arg name="gimbal_basic_hz" default="0"/>

    <!-- Prometheus功能包路径 -->
    <arg name="prometheus_moudles_url" default="/home/amov/Prometheus/Modules/"/>
    <!-- 单机配置文件路径 -->
    <arg name="uav_control_yaml" default="uav_control/launch/uav_control_outdoor.yaml"/>
    <!-- 集群配置文件路径 -->
    <!-- arg name="swarm_control_yaml" default="swarm_control/config/swarm_control_p600.yaml"/ -->
    <!-- 轨迹配置文件路径 -->
    <arg name="uav_command_yaml" default="uav_control/launch/uav_command_pub.yaml"/>

    <node pkg="prometheus_communication_bridge" type="communication_bridge" name="communication_bridge" output="screen">
        <!--组播ip-->
        <param name="multicast_udp_ip" value="$(arg ground_station_ip)"/>
	    <!--ego planner-->
        <param name="next_drone_ip" value="127.0.0.1"/>
	    <param name="broadcast_ip" value="127.0.0.255"/>
        <!-- 地面站ip -->
        <param name="ground_station_ip" value="$(arg ground_station_ip)"/>
        <param name="udp_port" value="8889"/>
        <param name="tcp_port" value="55555"/>
        <param name="rviz_port" value="8890"/>
        <param name="ROBOT_ID" value="$(arg uav_id)"/>
        <param name="try_connect_num" value="5"/>
        <param name="tcp_heartbeat_port" value="55556"/>
        <!--是否仿真模式  1为是  0为否-->
        <param name="is_simulation" value="$(arg is_simulation)"/>
        <!--集群数量，如果不是集群模式值为0-->
        <param name="swarm_num" value="$(arg swarm_num)"/>
        <!-- 集群模式下，数据超时情况，多久判断其失联且回传地面站 -->
        <param name="swarm_data_update_timeout" value="$(arg swarm_data_update_timeout)"/>

        <param name="drone_id" value="1"/>
        <param name="next_drone_ip" value="127.0.0.1"/>
        <param name="broadcast_ip" value="127.0.0.255"/>

        <param name="trajectory_ground_control" value="false"/>
        <param name="trajectory_flag" value="false"/>
        <param name="trajectory_mode" value="0"/>
        <param name="trajectory_time" value="0"/>

        <!-- 是否自启 -->
        <param name="autoload" value="$(arg autoload)"/>
        <param name="uav_control_start" value="$(arg uav_control_start)"/>
        <param name="close_uav_control" value="$(arg close_uav_control)"/>
        <param name="swarm_control_start" value="$(arg swarm_control_start)"/>
        <param name="close_swarm_control" value="$(arg close_swarm_control)"/>

        <!-- 发送频率 -->
        <param name="uav_basic_hz" value="$(arg uav_basic_hz)"/>
        <param name="ugv_basic_hz" value="$(arg ugv_basic_hz)"/>
        <param name="gimbal_basic_hz" value="$(arg gimbal_basic_hz)"/>

        <!-- 单机配置文件加载 -->
        <rosparam command="load" file="$(arg prometheus_moudles_url)$(arg uav_control_yaml)"/>
        <!-- 集群配置文件加载 -->
        <!-- rosparam command="load" file="$(arg prometheus_moudles_url)$(arg swarm_control_yaml)"/ -->
        <!-- 轨迹配置文件加载 -->
        <rosparam command="load" file="$(arg prometheus_moudles_url)$(arg uav_command_yaml)"/>
    </node>
</launch>
